/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import db.model.Buiding;
import db.model.user;
import java.awt.event.ItemListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author user
 */
public class BuidlingFrame extends javax.swing.JFrame {
    public static int Buil_id=1;
    public Buiding Buiding;
    Date date = new Date();
    public static ResultSet Prs;
    public static int Ids[];
    public BuidlingFrame() {
        initComponents();
        try {
            this.Updater();
        } catch (ParseException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        ProjectBuilding = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Building_profile = new javax.swing.JTextField();
        Buiding_name = new javax.swing.JTextField();
        location = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        User = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        buildingServiceAge = new javax.swing.JTextField();
        designBuildingAge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        FirstNext = new javax.swing.JButton();
        Next = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Prevous = new javax.swing.JButton();
        Last = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        DateChooser = new com.toedter.calendar.JDateChooser();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Next Step");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("close system");

        ProjectBuilding.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        ProjectBuilding.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ProjectBuilding.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ProjectBuildingItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Buildng Name :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Buildng Profile :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Location :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Date of Evaluation :");

        Building_profile.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        Buiding_name.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        location.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText(" owner :");

        User.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        User.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserMouseClicked(evt);
            }
        });
        User.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                UserItemStateChanged(evt);
            }
        });
        User.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                UserPropertyChange(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel21.setText("Designed Building  Age (Years) : ");
        jLabel21.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel20.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel20.setText("Buildng Service Age (Years) :");
        jLabel20.setBorder(new javax.swing.border.MatteBorder(null));

        buildingServiceAge.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        buildingServiceAge.setText("0"); // NOI18N

        designBuildingAge.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        designBuildingAge.setText("0");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Step 1: ceating Building project ");

        add.setText("add new");
        add.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addItemStateChanged(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        FirstNext.setText("first");
        FirstNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNextActionPerformed(evt);
            }
        });

        Next.setText("next");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        Delete.setText("delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Prevous.setText("prevous");
        Prevous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrevousActionPerformed(evt);
            }
        });

        Last.setText("last");
        Last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastActionPerformed(evt);
            }
        });

        jButton10.setText("Refrsh");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Search");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Show the Report");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(designBuildingAge, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buildingServiceAge, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(location))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Building_profile, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ProjectBuilding, javax.swing.GroupLayout.Alignment.TRAILING, 0, 517, Short.MAX_VALUE)
                                            .addComponent(Buiding_name, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(User, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Last, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FirstNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Prevous, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ProjectBuilding, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Buiding_name, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FirstNext, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Building_profile, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(DateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(User, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buildingServiceAge, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(designBuildingAge, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Next, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Prevous, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Last, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationActionPerformed
    private ResultSet getNext(ResultSet rs) throws SQLException
    {
        if(rs.isLast())
        {
            rs.first();
            System.out.println("=============================>[last rs]");
        } 
     
        else
          {
            rs=this.getRs(rs);
            System.out.println("=============================>[next rs]");
//            rs.next();
          }
        return rs;
    }
    private ResultSet getPrev(ResultSet rs) throws SQLException
    {
        if(rs.isFirst())
        {
            rs.last();
            System.out.println("=============================>[First rs]");
        } 
       
        else
          {
            rs=this.getRsP(rs);
            System.out.println("=============================>[prevous rs]");
//            rs.previous();
          }
        return rs;
    }
    public ResultSet getRsP(ResultSet rs) throws SQLException
    {
        while(rs.next())
        {
            if(rs.getInt("id")==Integer.parseInt(""+this.ProjectBuilding.getSelectedItem()))
            {
                System.out.println("=============================>[yes id="+Integer.parseInt(""+this.ProjectBuilding.getSelectedItem())+"]");
                break;
            }
        }
        return rs;
    }
    public ResultSet getRs(ResultSet rs) throws SQLException
    {
        while(rs.next())
        {
            if(rs.getInt("id")==Integer.parseInt(""+this.ProjectBuilding.getSelectedItem()))
            {
                System.out.println("=============================>[yes id="+Integer.parseInt(""+this.ProjectBuilding.getSelectedItem())+"]");
                break;
            }
        }
        return rs;
    }
        
    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
     try {
            Buiding =new Buiding();
            ResultSet rs=Buiding.All();
            rs=getNext(rs);
            Buiding.setParam(rs);
            System.out.println("id[============================>]"+Buiding.id);
            Buil_id=Buiding.id;
            this.ProjectBuilding.setSelectedItem(""+Buil_id);
            ProjectBuilding.addItemListener(
               new java.awt.event.ItemListener() {
                 @Override
                 public void itemStateChanged(java.awt.event.ItemEvent evt) {
                           ProjectBuildingItemStateChanged(evt);
                                                                           }
                                                 }
            );
            Buiding.getCon().close();
           
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        

// TODO add your handling code here:
    }//GEN-LAST:event_NextActionPerformed

private void addUseItemListeer(javax.swing.JComboBox combobox)
{
    ProjectBuilding.addItemListener(
               new java.awt.event.ItemListener() {
                 @Override
                 public void itemStateChanged(java.awt.event.ItemEvent evt) {
                           UserItemStateChanged(evt);
                                                                           }
                                                 }
            );
}    
private void addProjectItemListeer(javax.swing.JComboBox combobox)
{
    ProjectBuilding.addItemListener(
               new java.awt.event.ItemListener() {
                 @Override
                 public void itemStateChanged(java.awt.event.ItemEvent evt) {
                           ProjectBuildingItemStateChanged(evt);
                                                                           }
                                                 }
            );
}   
public void Updater() throws ParseException
{
    try {
             db.model.user user=new db.model.user();
             Ids=user.Ids();
            Buiding =new Buiding();
            this.jTable1 =Buiding.getAllAsDataTable(jTable1);
            this.jScrollPane1.setViewportView(this.jTable1);
            this.ProjectBuilding.setSelectedItem(""+Buiding.getFirstId());
            ResultSet rs=Buiding.Find(Buiding.getFirstId());
             this.Buiding_name.setText(Buiding.Buiding_name);
            this.Building_profile.setText(Buiding.Buiding_profile);
            this.buildingServiceAge.setText(""+Buiding.buildingServiceAge);
            this.location.setText(Buiding.location);
            this.designBuildingAge.setText(""+Buiding.designBuildingAge);
            this.jTable1 =Buiding.getAllAsDataTable(jTable1);
            this.jScrollPane1.setViewportView(this.jTable1);
            this.DateChooser.setDate(this.toDate(Buiding.date));
            
            ProjectBuilding=Buiding.toDataCombobox(ProjectBuilding,"id", " 1");
//            user user=new user();
            user.toDataCombobox(User, "firstName", " 1");
            User.addItem("Add new user");
            User.setSelectedIndex(this.binarySearch(Ids, 0, Ids.length, Buiding.owner_id)==-1?0:this.binarySearch(Ids, 0, Ids.length, Buiding.owner_id));
            this.addUseItemListeer(User);
//            Prs=Buiding.All();
            Buiding.getCon().close();
           
            
           
        } catch (SQLException ex) {
         
        } 
}
int binarySearch(int arr[], int l, int r, int x)
    {
        if (r>=l)
        {
            int mid = l + (r - l)/2;
  
            // If the element is present at the
            // middle itself
            if (arr[mid] == x)
               return mid;
  
            // If element is smaller than mid, then
            // it can only be present in left subarray
            if (arr[mid] > x)
               return binarySearch(arr, l, mid-1, x);
  
            // Else the element can only be present
            // in right subarray
            return binarySearch(arr, mid+1, r, x);
        }
  
        // We reach here when element is not present
        //  in array
        return -1;
    }
public void Updater(int Build_id) throws ParseException
{
    try {   
             db.model.user user=new db.model.user();
            Buiding =new Buiding();
            System.out.println("Build_id====>"+Build_id);
            
            ResultSet rs=Buiding.Find(Build_id);
            System.out.println("buidling_name="+rs.isClosed());
//            this.jComboBox1.setSelectedItem(""+Build_id);
            this.Buiding_name.setText(Buiding.Buiding_name);
            this.Building_profile.setText(Buiding.Buiding_profile);
            this.buildingServiceAge.setText(""+Buiding.buildingServiceAge);
            this.location.setText(Buiding.location);
            this.designBuildingAge.setText(""+Buiding.designBuildingAge);
            this.jTable1 =Buiding.getAllAsDataTable(jTable1);
            this.jScrollPane1.setViewportView(this.jTable1);
            this.DateChooser.setDate(this.toDate(Buiding.date));
            ProjectBuilding=Buiding.toDataCombobox(ProjectBuilding,"id", " 1");
//            user user=new user();
            user.toDataCombobox(User, "firstName", " 1");
            User.addItem("Add new user");
            User.setSelectedIndex(this.binarySearch(Ids, 0, Ids.length, Buiding.owner_id)==-1?0:this.binarySearch(Ids, 0, Ids.length, Buiding.owner_id));
            this.addUseItemListeer(User);
            Prs=Buiding.All();
            Buiding.getCon().close();
        } catch (SQLException ex) {
         
        } 
}
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        db.model.Buiding Model;
        try {
            Model = new db.model.Buiding();
            db.model.user user=new db.model.user();
            Model.Buiding_profile=this.Building_profile.getText();
            Model.Buiding_name=this.Buiding_name.getText();
	    Model.location =this.location.getText();
	    Model.owner_id=Integer.parseInt(""+user.Ids()[0]);
	    Model.buildingServiceAge=Integer.parseInt(this.buildingServiceAge.getText());
	    Model.designBuildingAge=Integer.parseInt(this.designBuildingAge.getText());
            
            Model.date =this.dateFomat(this.DateChooser.getDate());;
            Model.save();
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
	    
        
        
        
        
        try {
            this.Updater();
            
            
// TODO add your handling code here:
        } catch (ParseException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addActionPerformed

    private void UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserMouseClicked
   

// TODO add your handling code here:
    }//GEN-LAST:event_UserMouseClicked

    private void UserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_UserPropertyChange

//        
//if(this.jComboBox2.getSelectedItem()=="Add new user")
//   { 
//       User usr=new User();
//       usr.setVisible(rootPaneCheckingEnabled);
//       this.Updater();
//             
//   }

// TODO add your handling code here:
    }//GEN-LAST:event_UserPropertyChange

    private void UserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_UserItemStateChanged
       if(this.User.getSelectedItem()=="Add new user")
         { 
            User usr=new User();
            usr.setVisible(rootPaneCheckingEnabled);
           try {
               this.Updater();
           } catch (ParseException ex) {
               Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
             
         }
        

// TODO add your handling code here:
    }//GEN-LAST:event_UserItemStateChanged

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        try {
            this.Updater();
// TODO add your handling code here:
        } catch (ParseException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void ProjectBuildingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ProjectBuildingItemStateChanged
   Buil_id=Integer.parseInt(""+this.ProjectBuilding.getSelectedItem());
        try {
            db.model.user user =new db.model.user();
            if(!(user.getCon()==null))
                user.getCon().close();
            
            Ids=user.Ids();
            user.getCon().close();
            Buiding =new Buiding();
            ResultSet rs=Buiding.Find(Buil_id);
            System.out.println("buidling_name="+rs.isClosed());
//            this.jComboBox1.setSelectedItem(""+Build_id);
            this.Buiding_name.setText(Buiding.Buiding_name);
            this.Building_profile.setText(Buiding.Buiding_profile);
            this.buildingServiceAge.setText(""+Buiding.buildingServiceAge);
            this.location.setText(Buiding.location);
            this.designBuildingAge.setText(""+Buiding.designBuildingAge);
            this.DateChooser.setDate(this.toDate(Buiding.date));
            user.getCon().close();
            user.toDataCombobox(User, "firstName", " 1");
            user.getCon().close();
            User.addItem("Add new user");
            User.setSelectedIndex(this.binarySearch(Ids, 0, Ids.length-1, Buiding.owner_id)==-1?0:this.binarySearch(Ids, 0, Ids.length-1, Buiding.owner_id));
            this.addUseItemListeer(User);
            user.getCon().close();
            Buiding.getCon().close();
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ProjectBuildingItemStateChanged
    private String dateFomat(Date date)
    {
        String pattern = "yyyy-MM-dd";
	
	SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
	String stringDate= simpleDateFormat.format(date);
        return stringDate;
    }
    private Date toDate(String dateS) throws ParseException
    {
        String pattern = "yyyy-MM-dd";
        DateFormat format = new SimpleDateFormat(pattern);
        Date date = format.parse(dateS);
        return date;
    }
    /**
DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
Date date = format.parse("26/10/1985");
**/
    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
         db.model.user user=new db.model.user();
        db.model.Buiding Model;
        try {
            Model = new db.model.Buiding();
            Ids=user.Ids();
            Model.Find(Buil_id);
             System.out.println("data==========================================>"+Model);
            Model.Buiding_profile=this.Building_profile.getText();
            Model.Buiding_name=this.Buiding_name.getText();
	    Model.location =this.location.getText();
	    Model.owner_id=Ids[this.User.getSelectedIndex()];
	    Model.buildingServiceAge=Integer.parseInt(this.buildingServiceAge.getText());
	    Model.designBuildingAge=Integer.parseInt(this.designBuildingAge.getText());
            Model.date =this.dateFomat(this.DateChooser.getDate());
            System.out.println("date================================================>"+this.dateFomat(this.DateChooser.getDate()));
//            this.ProjectBuilding.setSelectedItem(""+Model.getId());
            Model.save();
            this.Updater(Buil_id);
            
            System.out.println("----------------------------------------------------------");
            this.ProjectBuilding.setSelectedItem(""+Buil_id);
            ProjectBuilding.addItemListener(
                             new java.awt.event.ItemListener() {
                                 public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                             ProjectBuildingItemStateChanged(evt);
                                                                                             }
                                                               }
            
            );
//            System.out.println("chenged :"+Integer.parseInt(""+this.ProjectBuilding.getSelectedItem()));
        
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
	    
        
        
        
        
 



// TODO add your handling code here:
    }//GEN-LAST:event_UpdateActionPerformed
    private void addProejctEvent()
    {
        
    }
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
    Buil_id=Integer.parseInt(""+this.ProjectBuilding.getSelectedItem());
        try {
            //   System.out.println("selected====>"+this.jComboBox1.getItemAt(this.jComboBox1.getSelectedIndex()));
//   System.out.println("selected====>"+this.jComboBox1.getSelectedItem());
            Buiding =new Buiding();
            Buiding.DeleteById(Buil_id);
            this.Updater();
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        

// TODO add your handling code here:
    }//GEN-LAST:event_DeleteActionPerformed

    private void addItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_addItemStateChanged

    private void FirstNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNextActionPerformed
        try {
            Buiding =new Buiding();
            ResultSet rs=Buiding.All();
            Buiding.setASFirsParam(rs);
            System.out.println("id[============================>]"+Buiding.id);
            Buil_id=Buiding.id;
            this.ProjectBuilding.setSelectedItem(""+Buil_id);
            ProjectBuilding.addItemListener(
               new java.awt.event.ItemListener() {
                 public void itemStateChanged(java.awt.event.ItemEvent evt) {
                           ProjectBuildingItemStateChanged(evt);
                                                                           }
                                                 }
            );
            
         Buiding.getCon().close();
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        

// TODO add your handling code here:
    }//GEN-LAST:event_FirstNextActionPerformed

    private void LastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastActionPerformed
      try {
            Buiding =new Buiding();
            ResultSet rs=Buiding.All();
            Buiding.setAsLastParam(rs);
            System.out.println("id[============================>]"+Buiding.id);
            Buil_id=Buiding.id;
            this.ProjectBuilding.setSelectedItem(""+Buil_id);
            ProjectBuilding.addItemListener(
               new java.awt.event.ItemListener() {
                 public void itemStateChanged(java.awt.event.ItemEvent evt) {
                           ProjectBuildingItemStateChanged(evt);
                                                                           }
                                                 }
            );
            
            Buiding.getCon().close();
           
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        


// TODO add your handling code here:
    }//GEN-LAST:event_LastActionPerformed

    private void PrevousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrevousActionPerformed
       try {
            Buiding =new Buiding();
            ResultSet rs=Buiding.All();
//            rs=getNext(rs);
//            Buiding.setParam(rs);
            this.getPrev(rs);
            Buiding.setAsPrvousParam(rs);
            System.out.println("id[============================>]"+Buiding.id);
            Buil_id=Buiding.id;
            this.ProjectBuilding.setSelectedItem(""+Buil_id);
            ProjectBuilding.addItemListener(
               new java.awt.event.ItemListener() {
                 public void itemStateChanged(java.awt.event.ItemEvent evt) {
                           ProjectBuildingItemStateChanged(evt);
                                                                           }
                                                 }
            );
            Buiding.getCon().close();
            
           
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        

// TODO add your handling code here:
    }//GEN-LAST:event_PrevousActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

         BeamColumnWalls b= new BeamColumnWalls();
         b.setVisible(rootPaneCheckingEnabled);
        try {
            Buiding Model =new Buiding ();
            Model.Find(Integer.parseInt(""+this.ProjectBuilding.getSelectedItem()));
            BeamColumnWalls.setModel(Model);
//        BeamColumnWalls.setModel();
            
            
// TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(BuidlingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuidlingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuidlingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuidlingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuidlingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuidlingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Buiding_name;
    private javax.swing.JTextField Building_profile;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JButton Delete;
    private javax.swing.JButton FirstNext;
    private javax.swing.JButton Last;
    private javax.swing.JButton Next;
    private javax.swing.JButton Prevous;
    private javax.swing.JComboBox ProjectBuilding;
    private javax.swing.JButton Update;
    private javax.swing.JComboBox User;
    private javax.swing.JButton add;
    private javax.swing.JTextField buildingServiceAge;
    private javax.swing.JTextField designBuildingAge;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField location;
    // End of variables declaration//GEN-END:variables
}
